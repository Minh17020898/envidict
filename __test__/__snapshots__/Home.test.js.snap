// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home renders Home screen 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
      "height": 1334,
    }
  }
>
  <View
    onLayout={[Function]}
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#F8F8F8",
            "borderBottomColor": "#a7a6ab",
            "borderBottomWidth": 0.5,
            "elevation": 3,
            "flexDirection": "row",
            "height": 64,
            "justifyContent": "center",
            "left": 0,
            "paddingLeft": 6,
            "paddingRight": 10,
            "paddingTop": 18,
            "right": 0,
            "shadowColor": undefined,
            "shadowOffset": undefined,
            "shadowOpacity": undefined,
            "shadowRadius": undefined,
            "top": 0,
          },
          Object {
            "backgroundColor": "#1c74bb",
          },
        ]
      }
    >
      <View
        accessible={true}
        focusable={false}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "borderBottomWidth": 1,
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 1,
            "borderRadius": 30,
            "borderRightWidth": 1,
            "borderTopWidth": 1,
            "borderWidth": 1,
            "flexDirection": "row",
            "flexGrow": 1,
            "marginLeft": 2,
            "marginVertical": 10,
            "opacity": 1,
          }
        }
      >
        <Text />
        <TextInput
          allowFontScaling={true}
          autoCapitalize="none"
          autoFocus={false}
          editable={true}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="Gõ từ để tra từ điển"
          placeholderTextColor="#575757"
          rejectResponderTermination={true}
          style={
            Object {
              "color": "#000",
              "flex": 1,
              "fontSize": 17,
              "height": 50,
              "paddingLeft": 8,
              "paddingRight": 5,
              "top": 1.5,
            }
          }
          underlineColorAndroid="rgba(0,0,0,0)"
          value=""
        />
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text />
          </View>
        </RNGestureHandlerButton>
      </View>
      <View
        accessible={true}
        focusable={false}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": 1,
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 0,
            "borderRadius": undefined,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "borderWidth": undefined,
            "flexDirection": "row",
            "marginLeft": 2,
            "opacity": 1,
          }
        }
      >
        <View
          accessible={true}
          focusable={false}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#1c74bb",
              "borderBottomWidth": null,
              "borderColor": "#007aff",
              "borderLeftWidth": null,
              "borderRadius": 57,
              "borderRightWidth": null,
              "borderTopWidth": null,
              "borderWidth": undefined,
              "elevation": 0,
              "flexDirection": "row",
              "height": 45,
              "justifyContent": "space-between",
              "opacity": 1,
              "paddingBottom": 6,
              "paddingTop": 6,
              "shadowColor": undefined,
              "shadowOffset": Object {
                "height": 0,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": undefined,
            }
          }
        >
          <Text />
        </View>
      </View>
    </View>
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": undefined,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      Object {
        "backgroundColor": "transparent",
        "flex": 1,
      }
    }
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <RCTScrollView>
        <View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {},
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderRadius": 2,
                    "elevation": 5,
                    "marginBottom": 15,
                    "marginHorizontal": 10,
                    "marginTop": 15,
                    "padding": 10,
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 4,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 5,
                  },
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "alignSelf": "center",
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {},
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "justifyContent": "space-between",
                        },
                      ]
                    }
                  >
                    <Text />
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "#000",
                            "fontFamily": "System",
                            "fontSize": 16,
                          },
                          Object {
                            "color": "#767676",
                            "fontSize": 24,
                          },
                        ]
                      }
                      uppercase={false}
                    >
                      TỪ CỦA HÔM NAY
                    </Text>
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-end",
                      "alignSelf": "center",
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {},
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "justifyContent": "space-between",
                        },
                      ]
                    }
                  >
                    <Text />
                  </View>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {},
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "space-between",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#000",
                        "fontFamily": "System",
                        "fontSize": 16,
                      },
                      Object {
                        "color": "#044470",
                        "fontSize": 26,
                        "fontWeight": "bold",
                        "marginVertical": 10,
                      },
                    ]
                  }
                  uppercase={false}
                />
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <Text />
                </View>
              </View>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#000",
                      "fontFamily": "System",
                      "fontSize": 16,
                    },
                    Object {
                      "color": "#01416e",
                      "fontSize": 28,
                      "marginTop": 5,
                    },
                  ]
                }
                uppercase={false}
              />
            </View>
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "flex": 1,
                },
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#000",
                    "fontFamily": "System",
                    "fontSize": 16,
                  },
                  Object {
                    "color": "#003a68",
                    "fontSize": 18,
                    "fontWeight": "bold",
                    "marginBottom": 10,
                    "marginLeft": 10,
                    "marginTop": 15,
                  },
                ]
              }
              uppercase={false}
            >
              Tìm kiếm gần đây
            </Text>
            <RCTScrollView
              data={Array []}
              dataArray={Array []}
              disableVirtualization={false}
              getItem={[Function]}
              getItemCount={[Function]}
              horizontal={true}
              initialNumToRender={10}
              keyExtractor={[Function]}
              maxToRenderPerBatch={10}
              numColumns={1}
              onContentSizeChange={[Function]}
              onEndReachedThreshold={2}
              onLayout={[Function]}
              onMomentumScrollEnd={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              removeClippedSubviews={false}
              renderItem={[Function]}
              renderRow={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={Array []}
              style={Object {}}
              updateCellsBatchingPeriod={50}
              viewabilityConfigCallbackPairs={Array []}
              windowSize={21}
            >
              <View />
            </RCTScrollView>
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "borderTopColor": "#FFFFFF",
                  "elevation": 0,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                },
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "stretch",
                  "backgroundColor": "#1c74bb",
                  "borderBottomWidth": null,
                  "borderColor": "#007aff",
                  "borderLeftWidth": null,
                  "borderRadius": 57,
                  "borderRightWidth": null,
                  "borderTopWidth": null,
                  "borderWidth": undefined,
                  "elevation": 2,
                  "flexDirection": "row",
                  "height": 45,
                  "justifyContent": "center",
                  "marginBottom": 25,
                  "opacity": 1,
                  "paddingBottom": 6,
                  "paddingTop": 6,
                  "shadowColor": undefined,
                  "shadowOffset": undefined,
                  "shadowOpacity": undefined,
                  "shadowRadius": undefined,
                  "width": 200,
                }
              }
            >
              <Text />
              <Text
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#fff",
                      "fontFamily": "System",
                      "fontSize": 16.5,
                      "marginLeft": 0,
                      "marginRight": 0,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                    },
                    Object {
                      "fontSize": 16,
                    },
                  ]
                }
                uppercase={false}
              >
                Dịch online
              </Text>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </RCTScrollView>
</View>
`;
